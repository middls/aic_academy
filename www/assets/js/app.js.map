{"version":3,"sources":["app.js"],"names":["onEntry","entry","forEach","change","classList","options","threshold","observer","IntersectionObserver","elements","document","querySelectorAll","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","next","done","elm","value","observe"],"mappings":"aAEA,SAAAA,QAAAC,GACAA,EAAAC,QAAA,SAAAC,GACAA,EAASH,gBACPC,EAAMC,OAAQE,UAACD,IAAW,aAQ5B,IAAIE,QAAU,CACZC,UAAW,CAAC,IAIVC,SAAW,IAAIC,qBAAqBR,QAASK,SAG7CI,SAAWC,SAASC,iBAAiB,uGAKzC,IAAA,IAAAC,MAAAC,UAAgBJ,SAAhBK,OAAAC,cAAAC,2BAAAJ,MAAAC,UAAAI,QAAAC,MAAAF,2BAAA,EAA0B,CAAA,IAAjBG,IAAiBP,MAAAQ,MACxBb,SAASc,QAAQF","file":"app.js","sourcesContent":["// the callback function that will be fired\r\n// when the element apears in the viewport\r\n// because it fires on initialization\r\n// we have to check for change.isIntersecting parameter\r\nfunction onEntry(entry) {\r\n  entry.forEach((change) => {\r\n    if(change.isIntersecting) {\r\n      change.target.classList.add('visible');\r\n    }\r\n  });\r\n}\r\n\r\n// list of options\r\nlet options = {\r\n  threshold: [1]\r\n};\r\n\r\n// instantiate a new Intersection Observer\r\nlet observer = new IntersectionObserver(onEntry, options);\r\n\r\n// list of paragraphs\r\nlet elements = document.querySelectorAll('h3, p, span, h1, ul, li');\r\n\r\n// loop through all elements\r\n// pass each element to observe method\r\n// ES2015 for-of loop can traverse through DOM Elements\r\nfor (let elm of elements) {\r\n  observer.observe(elm);\r\n}"]}